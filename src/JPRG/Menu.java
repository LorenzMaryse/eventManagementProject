/*
 * Class : DIT/FT/1B/03
 * Admission No. : 2026792
 * Name : Maryse Lorenzo 
 * Project Name: Assignment2
 */
package JPRG;

import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Tente
 */
public class Menu extends javax.swing.JFrame {

    //create eventmanagement object
    private EventManagement event = new EventManagement();

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        UserTypeGrp = new javax.swing.ButtonGroup();
        EventTypeGrp = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        EventPanel = new javax.swing.JPanel();
        nameInput = new javax.swing.JTextField();
        namelbl = new javax.swing.JLabel();
        organiserlbl = new javax.swing.JLabel();
        organiserInput = new javax.swing.JTextField();
        feesInput = new javax.swing.JTextField();
        feeslbl = new javax.swing.JLabel();
        dateNTimelbl = new javax.swing.JLabel();
        dateTimeInput = new javax.swing.JTextField();
        online = new javax.swing.JRadioButton();
        F2F = new javax.swing.JRadioButton();
        Add = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        getName = new javax.swing.JButton();
        Updatednamelbl1 = new javax.swing.JLabel();
        updatednameInput = new javax.swing.JTextField();
        Notelbl = new javax.swing.JLabel();
        availSpinner = new javax.swing.JSpinner();
        availlbl = new javax.swing.JLabel();
        EventSearchNamePanel = new javax.swing.JPanel();
        EventSearchNamelbl = new javax.swing.JLabel();
        nameInput1 = new javax.swing.JTextField();
        searchByName = new javax.swing.JButton();
        registerBtn = new javax.swing.JButton();
        AttendeesSpinner = new javax.swing.JSpinner();
        Attendeeslbl = new javax.swing.JLabel();
        EventSearchFeesPanel = new javax.swing.JPanel();
        searchByFees = new javax.swing.JButton();
        searchFeesInput = new javax.swing.JTextField();
        EventSearchFeeslbl = new javax.swing.JLabel();
        exit = new javax.swing.JButton();
        displayEvents = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        resultslbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        result = new javax.swing.JTextArea();
        UserTypePanel = new javax.swing.JPanel();
        Adminbtn = new javax.swing.JRadioButton();
        User = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 51, 255));
        jLabel1.setText("Event Management System");

        EventPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add/Delete/Edit Event", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        namelbl.setText("Name: ");

        organiserlbl.setText("Organiser: ");

        feeslbl.setText("Fees:");

        dateNTimelbl.setText("Date & Time: ");

        EventTypeGrp.add(online);
        online.setText("Online Event");

        EventTypeGrp.add(F2F);
        F2F.setText("Face To Face Event");

        Add.setBackground(new java.awt.Color(0, 204, 51));
        Add.setForeground(new java.awt.Color(255, 255, 255));
        Add.setText("Add Event");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(0, 204, 0));
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete Event");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        edit.setBackground(new java.awt.Color(0, 204, 0));
        edit.setForeground(new java.awt.Color(255, 255, 255));
        edit.setText("Edit Event");
        edit.setEnabled(false);
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        getName.setBackground(new java.awt.Color(0, 204, 0));
        getName.setForeground(new java.awt.Color(255, 255, 255));
        getName.setText("Get Name to Edit");
        getName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getNameActionPerformed(evt);
            }
        });

        Updatednamelbl1.setText("Updated Name: ");
        Updatednamelbl1.setEnabled(false);

        updatednameInput.setEditable(false);

        Notelbl.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Notelbl.setText("<html>\n<body>\nTake Note: \nType of Event\nis uneditable. \nChoose carefully.\n</body>\n</html>");
        Notelbl.setEnabled(false);
        Notelbl.setFocusable(false);

        availlbl.setText("Availability:");

        javax.swing.GroupLayout EventPanelLayout = new javax.swing.GroupLayout(EventPanel);
        EventPanel.setLayout(EventPanelLayout);
        EventPanelLayout.setHorizontalGroup(
            EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EventPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EventPanelLayout.createSequentialGroup()
                        .addGroup(EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(organiserInput, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(EventPanelLayout.createSequentialGroup()
                                    .addGroup(EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(namelbl)
                                        .addComponent(Updatednamelbl1))
                                    .addGap(62, 62, 62)
                                    .addGroup(EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(nameInput, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                                        .addComponent(updatednameInput, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)))
                                .addComponent(feesInput, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(EventPanelLayout.createSequentialGroup()
                                    .addComponent(availlbl)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                                    .addGroup(EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(dateTimeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(availSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(EventPanelLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(Add)
                                .addGap(36, 36, 36)
                                .addComponent(delete)
                                .addGap(38, 38, 38)
                                .addComponent(edit)))
                        .addGroup(EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(EventPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                                .addGroup(EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(EventPanelLayout.createSequentialGroup()
                                        .addComponent(getName)
                                        .addContainerGap(30, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EventPanelLayout.createSequentialGroup()
                                        .addComponent(Notelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(54, 54, 54))))
                            .addGroup(EventPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                                .addComponent(F2F)
                                .addGap(30, 30, 30))))
                    .addGroup(EventPanelLayout.createSequentialGroup()
                        .addGroup(EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(feeslbl)
                            .addComponent(organiserlbl)
                            .addComponent(dateNTimelbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(online)
                        .addGap(254, 254, 254))))
        );
        EventPanelLayout.setVerticalGroup(
            EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EventPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(namelbl)
                    .addComponent(getName))
                .addGroup(EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EventPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updatednameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Updatednamelbl1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(organiserInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(organiserlbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(feesInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(feeslbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateTimeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateNTimelbl)))
                    .addGroup(EventPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(Notelbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(online)
                        .addComponent(F2F))
                    .addGroup(EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(availSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(availlbl)))
                .addGap(36, 36, 36)
                .addGroup(EventPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Add)
                    .addComponent(delete)
                    .addComponent(edit))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        EventSearchNamePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        EventSearchNamelbl.setText("Event Name:");

        searchByName.setText("Search By Name");
        searchByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByNameActionPerformed(evt);
            }
        });

        registerBtn.setText("Register Event");
        registerBtn.setEnabled(false);
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });

        Attendeeslbl.setText("Number of People: ");

        javax.swing.GroupLayout EventSearchNamePanelLayout = new javax.swing.GroupLayout(EventSearchNamePanel);
        EventSearchNamePanel.setLayout(EventSearchNamePanelLayout);
        EventSearchNamePanelLayout.setHorizontalGroup(
            EventSearchNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EventSearchNamePanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(EventSearchNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(EventSearchNamelbl, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameInput1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchByName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(EventSearchNamePanelLayout.createSequentialGroup()
                        .addComponent(Attendeeslbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AttendeesSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(registerBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        EventSearchNamePanelLayout.setVerticalGroup(
            EventSearchNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EventSearchNamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(EventSearchNamelbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nameInput1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchByName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(EventSearchNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AttendeesSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Attendeeslbl))
                .addGap(18, 18, 18)
                .addComponent(registerBtn)
                .addContainerGap())
        );

        EventSearchFeesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        searchByFees.setText("Search By Fees");
        searchByFees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByFeesActionPerformed(evt);
            }
        });

        EventSearchFeeslbl.setText("Event Fees:($)");

        javax.swing.GroupLayout EventSearchFeesPanelLayout = new javax.swing.GroupLayout(EventSearchFeesPanel);
        EventSearchFeesPanel.setLayout(EventSearchFeesPanelLayout);
        EventSearchFeesPanelLayout.setHorizontalGroup(
            EventSearchFeesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EventSearchFeesPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(EventSearchFeesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EventSearchFeesPanelLayout.createSequentialGroup()
                        .addComponent(EventSearchFeeslbl)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(searchByFees, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchFeesInput))
                .addGap(28, 28, 28))
        );
        EventSearchFeesPanelLayout.setVerticalGroup(
            EventSearchFeesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EventSearchFeesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(EventSearchFeeslbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchFeesInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchByFees)
                .addContainerGap())
        );

        exit.setBackground(new java.awt.Color(102, 51, 255));
        exit.setForeground(new java.awt.Color(255, 255, 255));
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        displayEvents.setBackground(new java.awt.Color(102, 51, 255));
        displayEvents.setForeground(new java.awt.Color(255, 255, 255));
        displayEvents.setText("Display Events");
        displayEvents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayEventsActionPerformed(evt);
            }
        });

        reset.setBackground(new java.awt.Color(102, 51, 255));
        reset.setForeground(new java.awt.Color(255, 255, 255));
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        resultslbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        resultslbl.setText("Results:");

        result.setBackground(new java.awt.Color(204, 204, 204));
        result.setColumns(20);
        result.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        result.setRows(5);
        jScrollPane1.setViewportView(result);

        UserTypePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "User Type", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        UserTypeGrp.add(Adminbtn);
        Adminbtn.setSelected(true);
        Adminbtn.setText("Administrator");
        Adminbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminbtnActionPerformed(evt);
            }
        });

        UserTypeGrp.add(User);
        User.setText("Normal User");
        User.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UserTypePanelLayout = new javax.swing.GroupLayout(UserTypePanel);
        UserTypePanel.setLayout(UserTypePanelLayout);
        UserTypePanelLayout.setHorizontalGroup(
            UserTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserTypePanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(Adminbtn)
                .addGap(46, 46, 46)
                .addComponent(User)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        UserTypePanelLayout.setVerticalGroup(
            UserTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserTypePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UserTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Adminbtn)
                    .addComponent(User))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(resultslbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(displayEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 727, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(reset, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                            .addComponent(exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(208, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EventPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel1)
                                .addGap(31, 31, 31)
                                .addComponent(UserTypePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(EventSearchNamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EventSearchFeesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 46, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UserTypePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(EventPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(EventSearchNamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(EventSearchFeesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultslbl, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(displayEvents, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(reset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exit))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Try putting all the control under one action method to handle control groups
    private void UserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserActionPerformed
        registerBtn.setEnabled(true);
        Add.setEnabled(false);
        delete.setEnabled(false);
        edit.setEnabled(false);
        getName.setEnabled(false);
    }//GEN-LAST:event_UserActionPerformed

    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed
        try {
            String inputReg;
            String inputName = nameInput1.getText();

            if (nameInput1.getText().isEmpty()) {
                throw new InputException();
            }

            //Convert Object to String
            inputReg = AttendeesSpinner.getModel().getValue() + "";

            //Convert String to Integer
            int registered = Integer.parseInt(inputReg);

            //Ensure there are no negatives
            if (registered <= 0) {
                throw new Exception("That's not allowed. You can't just register for nobody.");
            }

            result.setText(event.Register(inputName, registered));

        } catch (InputException e) {
            result.setText("Please input a name");
        } catch (Exception e) {
            result.setText(e.getMessage());
        }
    }//GEN-LAST:event_registerBtnActionPerformed

    private void AdminbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminbtnActionPerformed
        registerBtn.setEnabled(false);
        Add.setEnabled(true);
        delete.setEnabled(true);
        getName.setEnabled(true);
    }//GEN-LAST:event_AdminbtnActionPerformed

    private void displayEventsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayEventsActionPerformed
        try {
            //return events
            String events = event.displayEvents();
            //print
            result.setText(events);
        } catch (Exception e) {
            result.setText(e.getMessage());
        }
    }//GEN-LAST:event_displayEventsActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        //Save Events array one last time
        event.SaveData();

        //Leaving message
        System.out.println("Program Terminated. Thank You");

        //Exit
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        //reset inputs
        nameInput1.setText("");
        searchFeesInput.setText("");
        result.setText("");
        nameInput.setText("");
        organiserInput.setText("");
        dateTimeInput.setText("");
        feesInput.setText("");
        updatednameInput.setText("");

        //reset controls that aren't inputs
        updatednameInput.setEditable(false);
        Updatednamelbl1.setEnabled(false);
        availSpinner.getModel().setValue(0);
        AttendeesSpinner.getModel().setValue(0);
    }//GEN-LAST:event_resetActionPerformed

    private void searchByFeesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByFeesActionPerformed
        String text, output;
        try {
            //Checks presence of input
            if (searchFeesInput.getText().isEmpty()) {
                throw new InputException();
            }

            text = searchFeesInput.getText();

            output = event.displayByFees(text);
            result.setText(output);

        } catch (InputException a) {
            result.setText("Please enter a number!");
        } catch (NumberFormatException a) {
            result.setText("Please enter a number not text!");
        } catch (Exception a) {
            result.setText(a.getMessage());
        }
    }//GEN-LAST:event_searchByFeesActionPerformed

    private void searchByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByNameActionPerformed
        String text, output;

        try {

            text = nameInput1.getText();

            //Checks presence of input
            if (nameInput1.getText().isEmpty()) {
                throw new InputException();
            }

            output = event.displayByName(text);
            result.setText(output);

        } catch (InputException a) {
            result.setText("Please enter a name!");
        } catch (Exception a) {
            result.setText(a.getMessage());
        }
    }//GEN-LAST:event_searchByNameActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        String inputName, inputOrganiser, inputDateTime, inputFees, inputType, inputAvail;

        try {
            //get inputs
            inputName = nameInput.getText();
            inputOrganiser = organiserInput.getText();
            inputDateTime = dateTimeInput.getText();
            inputFees = feesInput.getText();
            inputAvail = availSpinner.getModel().getValue() + "";

            //Checks presence of input
            if (inputName.isEmpty() || inputOrganiser.isEmpty() || inputDateTime.isEmpty() || inputFees.isEmpty()) {
                throw new InputException();
            }

            //Get type of event    
            if (online.isSelected()) {
                inputType = "Online";
            } else if (F2F.isSelected()) {
                inputType = "F2F";
            } else {
                inputType = "Event";
            }

            //Parse any Strings to double/int
            double fees = Double.parseDouble(inputFees);
            int avail = Integer.parseInt(inputAvail);

            //Ensure there are no negatives
            if (fees < 0) {
                throw new Exception("How does one even pay for " + fees + " fees?");
            }

            //Ensure there are no negatives
            if (avail <= 0) {
                throw new Exception("That's not allowed. There's usually at least one person at an event.");
            }

            //Add Event
            event.addEvents(inputName, inputOrganiser, inputDateTime, fees, inputType, avail);

            //Display Event
            String events = event.displayEvents();
            result.setText(events);
        } catch (InputException a) {
            result.setText("Please enter something!");
        } catch (NumberFormatException e) {
            result.setText("Please enter a number for fees");
        } catch (Exception a) {
            result.setText(a.getMessage());
            //System.out.println("Something went wrong " + a.getMessage());
        }
    }//GEN-LAST:event_AddActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        try {

            String inputName = nameInput.getText();

            //Checks presence of input
            if (inputName.isEmpty()) {
                throw new InputException();
            }

            boolean isFound = event.DeleteEvents(inputName);

            if (isFound == true) {
                String events = event.displayEvents();
                result.setText(events);
            }

        } catch (InputException a) {
            result.setText("Please enter a name!");
        } catch (Exception a) {
            result.setText(a.getMessage());
            System.out.println("Something went wrong");
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        String inputName, inputOrganiser, inputDateTime, inputFees, inputAvail = "";
        double fees = 0;

        try {
            //get inputs
            String name = nameInput.getText();

            String index = event.checkName(name);

            inputName = updatednameInput.getText();

            //Check if empty
            if (inputName.isEmpty()) {
                inputName = " ";
            }

            inputOrganiser = organiserInput.getText();

            if (inputOrganiser.isEmpty()) {
                inputOrganiser = " ";
            }

            inputDateTime = dateTimeInput.getText();

            if (inputDateTime.isEmpty()) {
                inputDateTime = " ";
            }

            inputFees = feesInput.getText();

            if (inputFees.isEmpty()) {
                inputFees = " ";
            }

            inputAvail = availSpinner.getModel().getValue().toString();

            if (!inputFees.equals(" ")) {
                fees = Double.parseDouble(inputFees);
            }

            //Parse input
            int attendees = Integer.parseInt(inputAvail);

            //Check for negatives
            if (fees < 0) {
                throw new Exception("How does one even pay for " + fees + " fees?");
            }

            //Ensure there are no negatives
            if (attendees <= 0) {
                throw new Exception("That's not allowed. There's usually at least one person at an event.");
            }

            //Runs edit function
            event.EditEvents(inputName, inputOrganiser, inputDateTime, inputFees, index, attendees);

            //Prints out Events
            String events = event.displayEvents();
            result.setText(events);
        } catch (NumberFormatException e) {
            result.setText("Please enter a number for fees");
        } catch (Exception e) {
            //result.setText(e.toString() + "\n" + e.getMessage()  + "\n" + e.getStackTrace() );
            result.setText(e.getMessage());
            System.out.println("Something went wrong");
        }
    }//GEN-LAST:event_editActionPerformed

    private void getNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getNameActionPerformed
        String name = nameInput.getText();

        String index;
        try {
            //get input
            index = event.checkName(name);

            //Enables up relevant controls
            edit.setEnabled(true);
            updatednameInput.setEditable(true);
            Updatednamelbl1.setEnabled(true);
            result.setText("Search successful. Key in the values you want to change.");

        } catch (Exception ex) {
            result.setText(ex.getMessage());
        }
    }//GEN-LAST:event_getNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JRadioButton Adminbtn;
    private javax.swing.JSpinner AttendeesSpinner;
    private javax.swing.JLabel Attendeeslbl;
    private javax.swing.JPanel EventPanel;
    private javax.swing.JPanel EventSearchFeesPanel;
    private javax.swing.JLabel EventSearchFeeslbl;
    private javax.swing.JPanel EventSearchNamePanel;
    private javax.swing.JLabel EventSearchNamelbl;
    private javax.swing.ButtonGroup EventTypeGrp;
    private javax.swing.JRadioButton F2F;
    private javax.swing.JLabel Notelbl;
    private javax.swing.JLabel Updatednamelbl1;
    private javax.swing.JRadioButton User;
    private javax.swing.ButtonGroup UserTypeGrp;
    private javax.swing.JPanel UserTypePanel;
    private javax.swing.JSpinner availSpinner;
    private javax.swing.JLabel availlbl;
    private javax.swing.JLabel dateNTimelbl;
    private javax.swing.JTextField dateTimeInput;
    private javax.swing.JButton delete;
    private javax.swing.JButton displayEvents;
    private javax.swing.JButton edit;
    private javax.swing.JButton exit;
    private javax.swing.JTextField feesInput;
    private javax.swing.JLabel feeslbl;
    private javax.swing.JButton getName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameInput;
    private javax.swing.JTextField nameInput1;
    private javax.swing.JLabel namelbl;
    private javax.swing.JRadioButton online;
    private javax.swing.JTextField organiserInput;
    private javax.swing.JLabel organiserlbl;
    private javax.swing.JButton registerBtn;
    private javax.swing.JButton reset;
    private javax.swing.JTextArea result;
    private javax.swing.JLabel resultslbl;
    private javax.swing.JButton searchByFees;
    private javax.swing.JButton searchByName;
    private javax.swing.JTextField searchFeesInput;
    private javax.swing.JTextField updatednameInput;
    // End of variables declaration//GEN-END:variables
}
